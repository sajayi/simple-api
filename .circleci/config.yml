jobs:
  build:
    machine: true
#    docker:
#      - image: 'circleci/node:11'
    steps:
      - checkout
      # Docker login
#      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      # build the application image
#      - run: docker build -t varsoft/simple-api:$CIRCLE_BRANCH .
      # deploy the image
#      - run: docker push varsoft/simple-api:$CIRCLE_BRANCH
      - kubernetes/install
      - run:
          name: Kubeconfig
          command: |-
            kubectl config set-credentials circleci-sa --token=$CIRCLECI_PIPELINE_SA_TOKEN
            kubectl config set-cluster fi-cluster --server=$FI_CLUSTER_IP --insecure-skip-tls-verify=true
            kubectl config set-context fi-cluster-context --cluster=fi-cluster --user=circleci-sa
            kubectl config use-context fi-cluster-context
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment/configmaps/development.yaml
          namespace: sandbox
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment/ingress/development.yaml
          namespace: sandbox
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          resource-file-path: deployment/services/services.yaml
          namespace: sandbox
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment/deployments/deployment.yaml
          resource-name: deployment/simple-api
          namespace: sandbox
          show-kubectl-command: true
#      - kubernetes/delete-resource:
#          now: true
#          resource-names: nginx-deployment
#          resource-types: deployments
#          namespace: sandbox
#          wait: true
      - slack/status:
          mentions: 'shawlz'

#release-branch-workflow:
#  jobs:
#    - build
#    - request-testing:
#        type: approval
#        requires:
#          - build
#    - deploy-aws:
#        requires:
#          - request-testing
orbs:
  slack: circleci/slack@3.2.0
  kubernetes: circleci/kubernetes@0.3.0
version: 2.1